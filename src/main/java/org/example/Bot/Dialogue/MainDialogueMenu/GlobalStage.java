package org.example.Bot.Dialogue.MainDialogueMenu;

import org.example.Bot.Dialogue.Possibility;
import org.example.Bot.Dialogue.Role;
import org.example.Bot.Excel.Templates.Referee;
import org.example.Main;
import org.example.Bot.Dialogue.Answer;
import org.example.Bot.Dialogue.IStage;
import org.example.Bot.TG.SafeUpdateParser;
import org.example.Bot.TG.TGSender;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.sql.Date;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Objects;
import java.util.stream.Stream;

public class GlobalStage extends IStage // –°—Ç–∞–¥–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
{
	public GlobalStage(String stageName)
	{
		super(stageName);
	}
	
	@Override
	public void action()
	{
	}
	
	@Override
	public String preValidation(Answer answer)
	{
		String messageText = answer.getMessage();
		String nextStageName = "";
		
		if(answer.hasMessage())
		{
			nextStageName = switch(messageText)
			{
				case "/commands", "/start" -> "send commands";
				case "/NewReferee" -> "new referee";
				case "/GlobalRating" -> "global rating";
				case "/NewCompetition" -> "new competition";
				case "/Account" -> "account";
				case "/PlanCompetition" -> "plan competition";
				case "/Register" -> "register";
				case "/About" -> "about";
				case "/AdminPanel" -> "admin panel";
				default -> "";
			};
		}
		
		if(answer.hasPhone())
		{
			SafeUpdateParser.getActiveUser().setPhoneNumber(answer.getPhone());
			nextStageName = "check phone";
		}
		
		if(nextStageName.equals("")) return null;
		else return nextStageName;
	}
	
	@Override
	public void addValidators()
	{
		validators.put("new referee", (answer) -> true);
		validators.put("new competition", (answer) -> true);
		validators.put("register", (answer) -> true);
		validators.put("admin panel", (answer) -> true);
		
		validators.put("send commands", (answer) ->
		{
			int id = SafeUpdateParser.getActiveUser().getFemidaID();
			Referee referee = new Referee(id);
			
			String head = "";
			if(id == -1)
			{
				if(!Objects.equals(SafeUpdateParser.getActiveUser().getPhoneNumber(), ""))
				{
					head = """
							–ê–∫–∫–∞—É–Ω—Ç–∞ —Å –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–∞—Ö —Å—É–¥–µ–π.
							
							–î–ª—è –≤–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:
							
							""";
				}
				else
				{
					head = """
							–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≤–∞—à /Account, –∑–∞—Ç–µ–º –≤–Ω–æ–≤—å –≤—ã–∑–æ–≤–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ /commands –∏–∑ –ú–µ–Ω—é.
							
							–ü–æ–∫–∞ –¥–ª—è –≤–∞—Å –¥–æ—Å—Ç—É–ø–Ω—ã –±–∞–∑–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:
							
							""";
				}
			}
			else
			{
				head = referee.getFIO() + ", –í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n\n";
			}
			
			String about = """
					*‚ÑπÔ∏è–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:*
					/About
					
					""";
			
			String newReferee = """
					‚ûï*–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Å—É–¥—å—é:*
					/NewReferee
					
					""";
			
			String newCompetition = """
					‚ûï*–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ:*
					/NewCompetition
					
					""";
			
			String globalRating = """
					üìÉ*–ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ —Å—É–¥–µ–π:*
					/GlobalRating
					
					""";
			
			String planCompetition = """
					üïê*–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ*
					/PlanCompetition
					
					""";
			
			String account = """
					üôÇ*–ú–æ–π –∞–∫–∫–∞—É–Ω—Ç*
					/Account
					
					""";
			
			String admin = """
					*–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥*
					/AdminPanel
					
					""";
			
			String commands = head;
			
			if(id != -1)
			{
				Role role = referee.getRole();
				
				if(role.getPossibility(Possibility.NEW_REFEREE)) commands += newReferee;
				if(role.getPossibility(Possibility.NEW_COMPETITION)) commands += newCompetition;
				if(role.getPossibility(Possibility.PLAN_COMPETITION)) commands += planCompetition;
				if(role.getPossibility(Possibility.ADMIN)) commands += admin;
			}
			
			commands += about + globalRating + account;
			TGSender.send(commands);
			return false;
		});
		
		validators.put("global rating", (answer) ->
		{
			String rating = Main.sql.getGlobalRating();
			TGSender.send("`–ë–∞–ª–ª—ã | –§–ò–û —Å—É–¥—å–∏\n------+-------------------\n" + rating + "`");
			return false;
		});
		
		validators.put("account", (answer) ->
		{
			if(SafeUpdateParser.getActiveUser().getFemidaID() == -1)
			{
				sendPhoneButton();
			}
			else
			{
				Referee referee = new Referee(SafeUpdateParser.getActiveUser().getFemidaID());
				TGSender.send(referee.toNiceString());
			}
			
			
			return false;
		});
		
		validators.put("check phone", (answer) ->
		{
			String phone = SafeUpdateParser.getActiveUser().getPhoneNumber();
			//phone = new Referee(1).getPhone();
			
			phone = "8" + phone.substring(phone.length() - 10);
			
			TGSender.send("*–í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –ø–æ –Ω–æ–º–µ—Ä—É:* " + phone);
			
			int id = Referee.findRefereeByPhone(phone);
			
			if(phone.equals("89118257206") && id == -1)
			{
				createMyAccount();
			}
			
			if(id == -1)
			{
				TGSender.send("‚ùóÔ∏èÔ∏èÔ∏èÔ∏è–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ä–µ—Ñ–µ—Ä–∏ —Å —Ç–∞–∫–∏–º –Ω–æ–º–µ—Ä–æ–º.\n\n–õ–∏–±–æ –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Ç–æ–≥–¥–∞ —Å–æ–∑–¥–∞–π—Ç–µ –µ–µ: /Register\n\n–õ–∏–±–æ –æ–Ω–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –Ω–∞ –¥—Ä—É–≥–æ–π –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Ç–æ–≥–¥–∞ /Support\n\n –ï—Å–ª–∏ –≤—ã –Ω–µ —É–≤–µ—Ä–µ–Ω—ã, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–∞—à –∞–∫–∫–∞—É—Ç–Ω, –Ω–∞–π–¥–∏—Ç–µ —Å–µ–±—è –≤ –ø–æ–∏—Å–∫–µ: /Search");
			}
			else
			{
				Referee referee = new Referee(id);
				TGSender.send(referee.toNiceString());
			}
			SafeUpdateParser.getActiveUser().setFemidaID(id);
			return false;
		});
		
		validators.put("plan competition", (answer) ->
		{
			TGSender.send("‚ùóÔ∏èÔ∏èÔ∏èÔ∏è–ï—â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–æ...");
			return false;
		});
		
		validators.put("about", (answer) ->
		{
			String s = """
					*–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ FEMIDA:*
					–ë–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å—É–¥–µ–π –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.
					
					*–î–ª—è —Ä—è–¥–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:*
					üî∏ –í–µ–¥–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –æ–ø—ã—Ç–∞ —Å—É–¥—å–∏ –¥–ª—è. –ü–æ–º–æ–∂–µ—Ç –≤ –≤—ã–±–æ—Ä–µ –ø—Ä–∏ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ —Å—É–¥–µ–π—Å–∫–æ–π –±—Ä–∏–≥–∞–¥—ã —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–º. –ß–µ–º –±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ —Å—É–¥—å–∏, —Ç–µ–º –±–æ–ª—å—à–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –±—ã—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã–º.
					
					üî∏ –î–æ—Å—Ç—É–ø –∫ –∞—Ä—Ö–∏–≤–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ø—Ä–æ—à–µ–¥—à–∏—Ö —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π, –∏—Ö –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Å –ø–æ–º–æ—â—å—é –ø–æ–∏—Å–∫–∞ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
					
					üî∏ –î–æ—Å—Ç—É–ø –∫ –≤—Å–µ–æ–±—â–µ–º—É —Ä–µ–π—Ç–∏–Ω–≥—É —Å—É–¥–µ–π –≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–π –¥–∏—Å—Ü–µ–ø–ª–∏–Ω–µ. –°–ø–∏—Å–æ–∫ —Å—É–¥–µ–π —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–∫—É –±–∞–ª–ª–æ–≤, –Ω–∞–±—Ä–∞–Ω–Ω–æ–º—É –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è. –°—É—â–µ—Å—Ç–≤—É—é—Ç —Ä–∞–∑–Ω—ã–µ –≤–∏–¥—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–æ–∫
					
					üî∏ –î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –±–æ—Ç–∞ —Å–æ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —É—Å—Ç—Ä–æ–π—Å—Ç–≤. –ú–æ–±–∏–ª—å–Ω—ã–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã, –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ü–ö, –Ω–æ—É—Ç–±—É–∫–∏...
					
					
					*–î–ª—è —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–π –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤:*
					üîπ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–¥—É—â–∏—Ö —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π. –î–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ –∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ —Å—É–¥–µ–π—Å–∫–æ–π –±—Ä–∏–≥–∞–¥—ã
					
					üîπ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å—É–¥–µ–π –Ω–∞ –±—É–¥—É—â–∏–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è. –î–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –æ–±—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —Å —Å—É–¥–µ–π—Å–∫–æ–π –±—Ä–∏–≥–∞–¥—ã –Ω–∞ –±—É–¥—É—â–µ–º —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–∏
					
					üîπ –ë—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± –Ω–∞–π—Ç–∏ —Å–æ—Å—Ç–∞–≤ —Å—É–¥–µ–π—Å–∫–æ–π –±—Ä–∏–≥–∞–¥—ã —á–µ—Ä–µ–∑ —Ä–∞—Å—Å—ã–ª–∫—É –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º. –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
					
					üîπ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫ —Å—É–¥–µ–π –¥–ª—è –±—Ä–∏–≥–∞–¥—ã –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º. –ü–æ–¥—Ö–æ–¥—è—â–∏–µ —Å—É–¥—å–∏ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –æ –ø–ª–∞–Ω–∏—Ä—É–µ–º–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏
					
					üîπ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤ –æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π –≤ –¥–æ—Å—Ç—É–ø–Ω–æ–π —Ñ–æ—Ä–º–µ. –ù–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä
					
					
					*–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤*
					üî∏ –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ Excel, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä—ã—Ö –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤–≤–æ–¥ –Ω–æ–≤—ã—Ö —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π.
					
					üî∏ –û—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–∞—è —Å–∏—Å—Ç–µ–º–∞. –ü—Ä–∏ –æ—à–∏–±–∫–µ –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –Ω–∏—á–µ–≥–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ.
					
					üî∏ –ü–µ—Ä–µ–¥ –∑–∞–Ω–µ—Å–µ–Ω–∏–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –æ–±—â—É—é –±–∞–∑—É - –æ–Ω–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É –ø—Ä–æ–≤–µ—Ä–∫—É. –õ–∏—à—å –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –ª—é–¥–µ–π, –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –±–∞–∑—É
					""";
			TGSender.send(s);
			return false;
		});
	}
	
	private static void sendPhoneButton()
	{
		SendMessage sendMessage = new SendMessage();
		sendMessage.setChatId(SafeUpdateParser.getChatID());
		sendMessage.setText("–†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–ö–æ–Ω–ø–∫–∞ —Å–Ω–∏–∑—É)");
		
		ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
		sendMessage.setReplyMarkup(replyKeyboardMarkup);
		replyKeyboardMarkup.setResizeKeyboard(true);
		replyKeyboardMarkup.setOneTimeKeyboard(true);
		
		List<KeyboardRow> keyboard = new ArrayList<>();
		
		KeyboardRow keyboardFirstRow = new KeyboardRow();
		KeyboardButton keyboardButton = new KeyboardButton();
		
		keyboardButton.setText("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä");
		keyboardButton.setRequestContact(true);
		keyboardFirstRow.add(keyboardButton);
		
		keyboard.add(keyboardFirstRow);
		replyKeyboardMarkup.setKeyboard(keyboard);
		
		TGSender.send(sendMessage);
	}
	
	private static void createMyAccount()
	{
		Referee referee = new Referee();
		referee.setSurname("–ì–æ–Ω—Ç–∞—Ä–µ–Ω–∫–æ");
		referee.setName("–ò–≥–æ—Ä—å");
		referee.setPatronymic("–ê–ª–µ–∫—Å–µ–µ–≤–∏—á");
		
		referee.setPhone("89118257206");
		
		referee.setCategory("-");
		referee.setClubName("-");
		referee.setClubType("-");
		
		referee.setBirth(Date.valueOf("2003-07-23"));
		referee.setCity("–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥");
		
		Role role = new Role();
		
		Arrays.stream(Possibility.values()).forEach(pos -> role.changeRole(pos, true));
		
		referee.setRole(role);
		
		Main.sql.addReferee(referee);
	}
}
